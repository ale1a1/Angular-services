import { Component, EventEmitter } from '@angular/core';
import { AccountService } from '../account.service';
import { LoggingService } from '../logging.service';

@Component({
  selector: 'app-new-account',
  templateUrl: './new-account.component.html',
  styleUrls: ['./new-account.component.css'],
})
export class NewAccountComponent {
  constructor(private accountService: AccountService) {
    this.accountService.statusUpdated.subscribe((status: string) =>
      alert(
        'New status: ' +
          status +
          '. NB!!! This alert is generated by cross component comunication: triggered clicking on account-component, then passing the value to new-account-component via AccountService (NB2: without services it should have used a different and more complicated approach: catch an event in account-component, then pass it UP to app-component, then pass the value DOWN to new-account-component through property binding!). NB3: this alert is generated by the constructor of the component new-account-component!'
      )
    );
  }

  onCreateAccount(accountName: string, accountStatus: string) {
    this.accountService.addAccount(accountName, accountStatus);
  }
}
